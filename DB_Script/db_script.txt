USE [master]
GO
/****** Object:  Database [DB_INVENTORY]    Script Date: 27-05-2024 06:11:06 ******/
CREATE DATABASE [DB_INVENTORY]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'DB_INVENTORY', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\DB_INVENTORY.mdf' , SIZE = 8192KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'DB_INVENTORY_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\DB_INVENTORY_log.ldf' , SIZE = 73728KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )
GO
ALTER DATABASE [DB_INVENTORY] SET COMPATIBILITY_LEVEL = 130
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [DB_INVENTORY].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [DB_INVENTORY] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET ARITHABORT OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [DB_INVENTORY] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [DB_INVENTORY] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET  DISABLE_BROKER 
GO
ALTER DATABASE [DB_INVENTORY] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [DB_INVENTORY] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET RECOVERY FULL 
GO
ALTER DATABASE [DB_INVENTORY] SET  MULTI_USER 
GO
ALTER DATABASE [DB_INVENTORY] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [DB_INVENTORY] SET DB_CHAINING OFF 
GO
ALTER DATABASE [DB_INVENTORY] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO
ALTER DATABASE [DB_INVENTORY] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO
ALTER DATABASE [DB_INVENTORY] SET DELAYED_DURABILITY = DISABLED 
GO
ALTER DATABASE [DB_INVENTORY] SET QUERY_STORE = OFF
GO
USE [DB_INVENTORY]
GO
ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
GO
ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
GO
ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
GO
ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
GO
USE [DB_INVENTORY]
GO
/****** Object:  Table [dbo].[CUSTOMER]    Script Date: 27-05-2024 06:11:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CUSTOMER](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[NAME] [varchar](50) NOT NULL,
 CONSTRAINT [PK_CUSTOMER] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ORDER]    Script Date: 27-05-2024 06:11:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ORDER](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ORDER_DESC] [varchar](150) NULL,
	[QUANTITY] [int] NOT NULL,
	[ORDER_DT] [smalldatetime] NOT NULL,
	[AMOUNT] [decimal](9, 2) NOT NULL,
	[CUSTOMER_ID] [int] NOT NULL,
	[PRODUCT_ID] [int] NOT NULL,
 CONSTRAINT [PK_ORDER] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PRODUCT]    Script Date: 27-05-2024 06:11:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PRODUCT](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[NAME] [varchar](50) NOT NULL,
	[RATE] [decimal](9, 2) NOT NULL,
 CONSTRAINT [PK_PRODUCT] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [dbo].[ORDER]  WITH CHECK ADD  CONSTRAINT [FK_ORDER_CUSTOMER] FOREIGN KEY([CUSTOMER_ID])
REFERENCES [dbo].[CUSTOMER] ([ID])
GO
ALTER TABLE [dbo].[ORDER] CHECK CONSTRAINT [FK_ORDER_CUSTOMER]
GO
ALTER TABLE [dbo].[ORDER]  WITH CHECK ADD  CONSTRAINT [FK_ORDER_PRODUCT] FOREIGN KEY([PRODUCT_ID])
REFERENCES [dbo].[PRODUCT] ([ID])
GO
ALTER TABLE [dbo].[ORDER] CHECK CONSTRAINT [FK_ORDER_PRODUCT]
GO
/****** Object:  StoredProcedure [dbo].[SP_GET_ENTITIES]    Script Date: 27-05-2024 06:11:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- SP_GET_ENTITIES '0','GET_ALL','PRODUCT'
-- =============================================
CREATE PROCEDURE [dbo].[SP_GET_ENTITIES] 
	-- Add the parameters for the stored procedure here
	@ID INT NULL,
	@REC_TYPE VARCHAR(10),
	@CATEGORY VARCHAR(10)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	BEGIN TRY
	BEGIN TRANSACTION 
	BEGIN
	BEGIN 
	
	IF(@REC_TYPE='GET_ALL')
	BEGIN
		IF(@CATEGORY='ORDER')
			BEGIN

			SELECT 
			[ORDER].[ID],
			ROW_NUMBER() OVER (ORDER BY [ORDER].ID) AS Sl
		  ,[ORDER_DESC]
		  ,[QUANTITY]
		  ,[ORDER_DT]
		  ,[AMOUNT]
		  ,CUSTOMER.NAME AS CustomerName
		  ,PRODUCT.NAME AS ProductName
		  
  FROM [dbo].[ORDER] INNER JOIN CUSTOMER ON [ORDER].CUSTOMER_ID=CUSTOMER.ID
  INNER JOIN PRODUCT ON [ORDER].PRODUCT_ID=PRODUCT.ID
				
			END
			IF(@CATEGORY='PRODUCT')
			BEGIN
				SELECT * FROM PRODUCT
			END
			IF(@CATEGORY='CUSTOMER')
			BEGIN
				SELECT * FROM CUSTOMER 
			END
	END

	IF(@REC_TYPE='GET_ID')
	BEGIN
		IF(@CATEGORY='ORDER')
			BEGIN
				SELECT * FROM [ORDER] WHERE ID=@ID
			END
			IF(@CATEGORY='PRODUCT')
			BEGIN
				SELECT RATE FROM PRODUCT WHERE ID=@ID
			END
			IF(@CATEGORY='CUSTOMER')
			BEGIN
				SELECT * FROM CUSTOMER WHERE ID=@ID
			END
	END
    -- Insert statements for procedure here

END
END
   	IF @@TRANCOUNT > 0
			BEGIN
				COMMIT TRAN 
				return @ID;
			END
	END TRY
	BEGIN CATCH
			IF @@ERROR<>0  
			BEGIN
				ROLLBACK  TRAN
				--INSERT INTO tblErrorMessage(spName, errorMessage, systemDate) 
				--VALUES ('[SP_CRUDG_MAST_STATUTORY_LIMIT_SETUP_ALL]', ERROR_MESSAGE(), GETDATE())
				SET @ID=0
			END
		END CATCH
	
		RETURN ISNULL(@ID,0)
END
GO
/****** Object:  StoredProcedure [dbo].[SP_SAVE_ORDERS]    Script Date: 27-05-2024 06:11:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_SAVE_ORDERS] 
	-- Add the parameters for the stored procedure here
	@ID INT,
	@CUST_ID INT ,
	@PROD_ID INT ,
	@QUANTITY INT
	--@ORDER_DESC VARCHAR(100),
	--@AMOUNT DECIMAL(9,2)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	BEGIN TRY
	BEGIN TRANSACTION 
	BEGIN
	BEGIN 

	DECLARE @Amount_Calc DECIMAL
	SELECT @Amount_Calc=@QUANTITY* Rate FROM PRODUCT WHERE ID=@PROD_ID
	IF(@ID=0)
	BEGIN
		
		INSERT INTO [dbo].[ORDER]
           (
		    [CUSTOMER_ID]
           ,[PRODUCT_ID]
		    ,[QUANTITY]
			--,[ORDER_DESC]
			,[AMOUNT]
           
           ,[ORDER_DT]
           )
     VALUES
			(
				@CUST_ID  ,
				@PROD_ID  ,
				@QUANTITY ,
				
				@Amount_Calc ,
				GETDATE()
			
			)
	END

	ELSE
	BEGIN
		UPDATE [ORDER]
		SET
				[CUSTOMER_ID]=@CUST_ID  ,
				[PRODUCT_ID]=@PROD_ID  ,
				@QUANTITY=@QUANTITY ,
				--@ORDER_DESC=@ORDER_DESC ,
				AMOUNT=@Amount_Calc
		WHERE ID=@ID
    -- Insert statements for procedure here
END
END
END
   	IF @@TRANCOUNT > 0
			BEGIN
				COMMIT TRAN 
				return @ID;
			END
	END TRY
	BEGIN CATCH
			IF @@ERROR<>0  
			BEGIN
				ROLLBACK  TRAN
				--INSERT INTO tblErrorMessage(spName, errorMessage, systemDate) 
				--VALUES ('[SP_CRUDG_MAST_STATUTORY_LIMIT_SETUP_ALL]', ERROR_MESSAGE(), GETDATE())
				SET @ID=0
			END
		END CATCH
	
		RETURN ISNULL(@ID,0)
END
GO
USE [master]
GO
ALTER DATABASE [DB_INVENTORY] SET  READ_WRITE 
GO
